---
- name: Create project folder structure
  ansible.builtin.file:
    path: "{{ proj_root }}{{ proj_name }}/scripts"
    state: directory
    mode: '0755'

- name: Copy project files into project folder
  ansible.builtin.copy:
    src: "{{ item }}-{{ vm_folder_name }}.tf"
    dest: "{{ proj_root }}{{ proj_name }}/{{ item }}.tf"
    mode: '0644'
  loop:
    - main
    - variables

- name: Copy project scripts into scripts folder
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ proj_root }}{{ proj_name }}/scripts/{{ item }}"
  loop:
    - config.ps1
    - post_script.sh

- name: Create tfvars file
  ansible.builtin.template:
    src: terraform.tfvars.j2
    dest: "{{ proj_root }}{{ proj_name }}/terraform.tfvars"
    mode: '0644'

- name: Create backend tf
  ansible.builtin.template:
    src: backend.tf.j2
    dest: "{{ proj_root }}{{ proj_name }}/backend.tf"
    mode: '0644'

- name: Create creds file
  ansible.builtin.template:
    src: creds.json.j2
    dest: "{{ proj_root }}{{ proj_name }}/creds.json"
    mode: '0400'

- name: Run Terraform Apply
  community.general.terraform:
    force_init: true
    project_path: "{{ proj_root }}{{ proj_name }}"
    state: present
    variables:
      vsphere_template: "{{ vsphere_template }}"
      vsphere_datastore_list: "{{ vsphere_datastore_list | to_json }}"
      vsphere_storage_policy: "{{ vsphere_storage_policy | to_json }}"
      vsphere_network_list: "{{ vsphere_network_list | to_json }}"
      vm_folder_name: "{{ vm_folder_name }}"
      vm_name_list: "{{ vm_name_list | to_json }}"
      ip_address_list: "{{ ip_address_list | to_json }}"
      ip_gateway_list: "{{ ip_gateway_list | to_json }}"
      vm_ram: "{{ vm_ram }}"
      vm_cpu: "{{ vm_cpu }}"
      dns_suffix_list: "{{ dns_suffix_list | to_json }}"
      workgroup: "{{ workgroup | default([]) }}"

- name: Clean up project folder
  ansible.builtin.file:
    path: "{{ proj_root }}{{ proj_name }}"
    state: absent
